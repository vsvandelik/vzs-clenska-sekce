# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["_docs"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Single deploy job since we're just deploying
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Pages
        uses: actions/configure-pages@v4
      - name: Set up Python version
        uses: actions/setup-python@v3
        with:
          python-version: "3.11.0"
      - name: Generate html documentation
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements_dev.txt
          cd docs
          sphinx-apidoc -o _autodoc ..
          sphinx-build -b html . _build
      #- name: Copy requirements file
      #  run: |
      #    cp .env.dist .env
      #    cp requirements.txt docs/
      #    echo -e '\nrinohtype' >> docs/requirements.txt
      #- uses: ammaraskar/sphinx-action@master
      #  with:
      #    docs-folder: "docs/"
      #    pre-build-command: "sphinx-apidoc -o _autodoc .."
      #    build-command: "sphinx-build -b html . _build"
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload entire repository
          path: '_build/html'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
