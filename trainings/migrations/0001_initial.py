# Generated by Django 4.2.3 on 2023-08-29 22:17

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("events", "0001_initial"),
        ("persons", "0001_initial"),
        ("transactions", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="CoachOccurrenceAssignment",
            fields=[
                (
                    "organizerassignment_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="events.organizerassignment",
                    ),
                ),
            ],
            bases=("events.organizerassignment",),
        ),
        migrations.CreateModel(
            name="CoachPositionAssignment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "person",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="persons.person",
                        verbose_name="Osoba",
                    ),
                ),
                (
                    "position_assignment",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="events.eventpositionassignment",
                        verbose_name="Pozice události",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Training",
            fields=[
                (
                    "event_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="events.event",
                    ),
                ),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("lezecky", "lezecký"),
                            ("plavecky", "plavecký"),
                            ("zdravoveda", "zdravověda"),
                        ],
                        max_length=10,
                        verbose_name="Druh události",
                    ),
                ),
                (
                    "po_from",
                    models.TimeField(blank=True, null=True, verbose_name="Od*"),
                ),
                ("po_to", models.TimeField(blank=True, null=True, verbose_name="Do*")),
                (
                    "ut_from",
                    models.TimeField(blank=True, null=True, verbose_name="Od*"),
                ),
                ("ut_to", models.TimeField(blank=True, null=True, verbose_name="Do*")),
                (
                    "st_from",
                    models.TimeField(blank=True, null=True, verbose_name="Od*"),
                ),
                ("st_to", models.TimeField(blank=True, null=True, verbose_name="Do*")),
                (
                    "ct_from",
                    models.TimeField(blank=True, null=True, verbose_name="Od*"),
                ),
                ("ct_to", models.TimeField(blank=True, null=True, verbose_name="Do*")),
                (
                    "pa_from",
                    models.TimeField(blank=True, null=True, verbose_name="Od*"),
                ),
                ("pa_to", models.TimeField(blank=True, null=True, verbose_name="Do*")),
                (
                    "so_from",
                    models.TimeField(blank=True, null=True, verbose_name="Od*"),
                ),
                ("so_to", models.TimeField(blank=True, null=True, verbose_name="Do*")),
                (
                    "ne_from",
                    models.TimeField(blank=True, null=True, verbose_name="Od*"),
                ),
                ("ne_to", models.TimeField(blank=True, null=True, verbose_name="Do*")),
                (
                    "coaches",
                    models.ManyToManyField(
                        related_name="training_coach_position_assignment_set",
                        through="trainings.CoachPositionAssignment",
                        to="persons.person",
                    ),
                ),
            ],
            options={
                "abstract": False,
                "base_manager_name": "objects",
            },
            bases=("events.event",),
        ),
        migrations.CreateModel(
            name="TrainingOccurrence",
            fields=[
                (
                    "eventoccurrence_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="events.eventoccurrence",
                    ),
                ),
                ("datetime_start", models.DateTimeField(verbose_name="Začíná")),
                ("datetime_end", models.DateTimeField(verbose_name="Končí")),
            ],
            options={
                "abstract": False,
                "base_manager_name": "objects",
            },
            bases=("events.eventoccurrence",),
        ),
        migrations.CreateModel(
            name="TrainingWeekdays",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "weekday",
                    models.PositiveSmallIntegerField(
                        unique=True,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(6),
                        ],
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="TrainingParticipantEnrollment",
            fields=[
                (
                    "participantenrollment_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="events.participantenrollment",
                    ),
                ),
                (
                    "person",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="persons.person",
                        verbose_name="Osoba",
                    ),
                ),
                (
                    "training",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="trainings.training",
                    ),
                ),
                ("transactions", models.ManyToManyField(to="transactions.transaction")),
                (
                    "weekdays",
                    models.ManyToManyField(
                        related_name="training_weekdays_set",
                        to="trainings.trainingweekdays",
                    ),
                ),
            ],
            options={
                "unique_together": {("training", "person")},
            },
            bases=("events.participantenrollment",),
        ),
        migrations.CreateModel(
            name="TrainingParticipantAttendance",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "enrollment",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="trainings.trainingparticipantenrollment",
                    ),
                ),
                (
                    "occurrence",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="trainings.trainingoccurrence",
                    ),
                ),
                (
                    "person",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="persons.person"
                    ),
                ),
            ],
            options={
                "unique_together": {("person", "occurrence")},
            },
        ),
        migrations.AddField(
            model_name="trainingoccurrence",
            name="attending_participants",
            field=models.ManyToManyField(
                related_name="training_participants_attendance_set",
                through="trainings.TrainingParticipantAttendance",
                to="persons.person",
            ),
        ),
        migrations.AddField(
            model_name="trainingoccurrence",
            name="coaches",
            field=models.ManyToManyField(
                related_name="coaches_occurrence_assignment_set",
                through="trainings.CoachOccurrenceAssignment",
                to="persons.person",
            ),
        ),
        migrations.AddField(
            model_name="training",
            name="enrolled_participants",
            field=models.ManyToManyField(
                related_name="training_participant_enrollment_set",
                through="trainings.TrainingParticipantEnrollment",
                to="persons.person",
            ),
        ),
        migrations.AddField(
            model_name="training",
            name="main_coach_assignment",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="main_coach_assignment",
                to="trainings.coachpositionassignment",
            ),
        ),
        migrations.AddField(
            model_name="coachpositionassignment",
            name="training",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="trainings.training"
            ),
        ),
        migrations.AddField(
            model_name="coachoccurrenceassignment",
            name="occurrence",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="trainings.trainingoccurrence",
            ),
        ),
        migrations.AddField(
            model_name="coachoccurrenceassignment",
            name="person",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="persons.person",
                verbose_name="Osoba",
            ),
        ),
        migrations.AddField(
            model_name="coachoccurrenceassignment",
            name="position_assignment",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="events.eventpositionassignment",
                verbose_name="Pozice události",
            ),
        ),
        migrations.CreateModel(
            name="TrainingReplaceabilityForParticipants",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "training_1",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="replaceable_training_1",
                        to="trainings.training",
                    ),
                ),
                (
                    "training_2",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="replaceable_training_2",
                        to="trainings.training",
                    ),
                ),
            ],
            options={
                "unique_together": {("training_1", "training_2")},
            },
        ),
        migrations.AlterUniqueTogether(
            name="coachpositionassignment",
            unique_together={("person", "training")},
        ),
        migrations.AlterUniqueTogether(
            name="coachoccurrenceassignment",
            unique_together={("person", "occurrence")},
        ),
    ]
